{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nclass ShoppingService {\n  constructor() {\n    this.ingredients = [\n      // new Ingredient(\"Ingredient1\",5),\n      // new Ingredient(\"Ingredint2\",10)\n    ];\n    this.ingredientsUpdated = new EventEmitter();\n    this.editIngredient = new Subject();\n  }\n  addNewIngredient(e) {\n    this.ingredients.push(e);\n    this.ingredientsUpdated.emit(this.ingredients);\n  }\n  getIngredientsList() {\n    return this.ingredients.slice(0);\n  }\n  getIngredientById(id) {\n    return this.ingredients[id];\n  }\n}\nShoppingService.ɵfac = function ShoppingService_Factory(t) {\n  return new (t || ShoppingService)();\n};\nShoppingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ShoppingService,\n  factory: ShoppingService.ɵfac,\n  providedIn: 'root'\n});\nexport { ShoppingService };","map":{"version":3,"names":["EventEmitter","Subject","ShoppingService","constructor","ingredients","ingredientsUpdated","editIngredient","addNewIngredient","e","push","emit","getIngredientsList","slice","getIngredientById","id","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Sachin\\WorkSpace\\Angular_Tutorial\\06_Course_Project_Forms\\src\\app\\shopping-lists\\shopping.service.ts"],"sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\nimport { Ingredient } from '../shared/ingredient.model';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShoppingService {\n\n  constructor() { }\n\n  private ingredients:Ingredient[] = [\n    // new Ingredient(\"Ingredient1\",5),\n    // new Ingredient(\"Ingredint2\",10)\n  ];\n\n  addNewIngredient(e:Ingredient){\n    this.ingredients.push(e);\n    this.ingredientsUpdated.emit(this.ingredients);\n  }\n\n  getIngredientsList(){\n    return this.ingredients.slice(0);\n  }\n\n  getIngredientById(id:number):Ingredient{\n    return this.ingredients[id];\n  }\n\n  updateIngredientById(id:number,ing:Ingredient)\n\n  ingredientsUpdated = new EventEmitter<Ingredient[]>();\n\n  editIngredient = new Subject<number>();\n}\n"],"mappings":"AAAA,SAAqBA,YAAY,QAAQ,eAAe;AAExD,SAASC,OAAO,QAAQ,MAAM;;AAE9B,MAGaC,eAAe;EAE1BC,YAAA;IAEQ,KAAAC,WAAW,GAAgB;MACjC;MACA;IAAA,CACD;IAiBD,KAAAC,kBAAkB,GAAG,IAAIL,YAAY,EAAgB;IAErD,KAAAM,cAAc,GAAG,IAAIL,OAAO,EAAU;EAxBtB;EAOhBM,gBAAgBA,CAACC,CAAY;IAC3B,IAAI,CAACJ,WAAW,CAACK,IAAI,CAACD,CAAC,CAAC;IACxB,IAAI,CAACH,kBAAkB,CAACK,IAAI,CAAC,IAAI,CAACN,WAAW,CAAC;EAChD;EAEAO,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAACP,WAAW,CAACQ,KAAK,CAAC,CAAC,CAAC;EAClC;EAEAC,iBAAiBA,CAACC,EAAS;IACzB,OAAO,IAAI,CAACV,WAAW,CAACU,EAAE,CAAC;EAC7B;;AApBWZ,eAAe,C;mBAAfA,eAAe;AAAA;AAAfA,eAAe,C;SAAfA,eAAe;EAAAa,OAAA,EAAfb,eAAe,CAAAc,IAAA;EAAAC,UAAA,EAFd;AAAM;SAEPf,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}