{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet RecipeEditComponent = class RecipeEditComponent {\n  constructor(route, recipeSrv) {\n    this.route = route;\n    this.recipeSrv = recipeSrv;\n    this.isEdit = false;\n  }\n  initForm() {\n    let recipeName = \"\";\n    let imageURL = \"\";\n    let description = \"\";\n    let ingredients = [];\n    if (this.isEdit) {\n      let recipe = this.recipeSrv.getRecipeById(this.recipeId);\n      recipeName = recipe['name'];\n      imageURL = recipe['imagePath'];\n      description = recipe['description'];\n      ingredients = recipe['ingredients'];\n    }\n    console.log(description);\n    this.recipeForm = new FormGroup({\n      'name': new FormControl(recipeName, [Validators.required]),\n      'imageURL': new FormControl(imageURL, [Validators.required]),\n      'description': new FormControl(description, [Validators.required])\n      // 'ingredients': new FormArray(ingredients.map((ing)=>{\n      //   return new FormGroup({\n      //     name: new FormControl(ing.name),\n      //     amount: new FormControl(ing.amount)\n      //   })\n      // }))\n    });\n\n    console.log(this.recipeForm.value);\n  }\n  getIngredientsControlArray() {\n    return this.recipeForm.get('ingredients').controls;\n  }\n  addIngredientControl() {\n    this.recipeForm.get(\"ingredients\").push(new FormControl({\n      name: null,\n      amount: null\n    }));\n  }\n  ngOnInit() {\n    this.route.params.subscribe(param => {\n      this.recipeId = param['id'];\n      console.log(param);\n      this.isEdit = param['id'] != undefined;\n      console.log(this.isEdit);\n      this.initForm();\n    });\n  }\n  onSubmit() {\n    console.log(this.recipeForm);\n  }\n};\nRecipeEditComponent = __decorate([Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css']\n})], RecipeEditComponent);\nexport { RecipeEditComponent };","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","RecipeEditComponent","constructor","route","recipeSrv","isEdit","initForm","recipeName","imageURL","description","ingredients","recipe","getRecipeById","recipeId","console","log","recipeForm","required","value","getIngredientsControlArray","get","controls","addIngredientControl","push","name","amount","ngOnInit","params","subscribe","param","undefined","onSubmit","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Sachin\\WorkSpace\\Angular_Tutorial\\06_Course_Project_Forms\\src\\app\\recipes\\recipe-edit\\recipe-edit.component.ts"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { RecipeService } from '../recipe.service';\nimport { Ingredient } from 'src/app/shared/ingredient.model';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css']\n})\nexport class RecipeEditComponent implements OnInit{\n  constructor(private route:ActivatedRoute, private recipeSrv:RecipeService){};\n\n  recipeId!:number;\n  isEdit:boolean = false;\n\n  recipeForm!:FormGroup;\n\n  private initForm(){\n    let recipeName = \"\";\n    let imageURL = \"\";\n    let description = \"\";\n    let ingredients:Ingredient[] = [];\n    if(this.isEdit){\n      let recipe = this.recipeSrv.getRecipeById(this.recipeId)\n      recipeName = recipe['name'];\n      imageURL = recipe['imagePath'];\n      description = recipe['description'];\n      ingredients = recipe['ingredients'];\n\n    }\n    console.log(description);\n    this.recipeForm = new FormGroup({\n      'name': new FormControl(recipeName,[Validators.required]),\n      'imageURL': new FormControl(imageURL,[Validators.required]),\n      'description': new FormControl(description,[Validators.required]),\n      // 'ingredients': new FormArray(ingredients.map((ing)=>{\n      //   return new FormGroup({\n      //     name: new FormControl(ing.name),\n      //     amount: new FormControl(ing.amount)\n      //   })\n      // }))\n    });\n    console.log(this.recipeForm.value);\n  }\n\n  getIngredientsControlArray(){\n    return (this.recipeForm.get('ingredients') as FormArray).controls;\n  }\n\n  addIngredientControl(){\n    (this.recipeForm.get(\"ingredients\") as FormArray).push(new FormControl({\n      name:null,\n      amount:null\n    }))\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((param:Params)=>{\n      this.recipeId = param['id'];\n      console.log(param);\n      this.isEdit = param['id'] != undefined;\n      console.log(this.isEdit);\n      this.initForm();\n    })\n  }\n\n  onSubmit(){\n    console.log(this.recipeForm);\n  }\n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAe,eAAe;AAChD,SAAoBC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAU9E,IAAaC,mBAAmB,GAAhC,MAAaA,mBAAmB;EAC9BC,YAAoBC,KAAoB,EAAUC,SAAuB;IAArD,KAAAD,KAAK,GAALA,KAAK;IAAyB,KAAAC,SAAS,GAATA,SAAS;IAG3D,KAAAC,MAAM,GAAW,KAAK;EAHqD;EAOnEC,QAAQA,CAAA;IACd,IAAIC,UAAU,GAAG,EAAE;IACnB,IAAIC,QAAQ,GAAG,EAAE;IACjB,IAAIC,WAAW,GAAG,EAAE;IACpB,IAAIC,WAAW,GAAgB,EAAE;IACjC,IAAG,IAAI,CAACL,MAAM,EAAC;MACb,IAAIM,MAAM,GAAG,IAAI,CAACP,SAAS,CAACQ,aAAa,CAAC,IAAI,CAACC,QAAQ,CAAC;MACxDN,UAAU,GAAGI,MAAM,CAAC,MAAM,CAAC;MAC3BH,QAAQ,GAAGG,MAAM,CAAC,WAAW,CAAC;MAC9BF,WAAW,GAAGE,MAAM,CAAC,aAAa,CAAC;MACnCD,WAAW,GAAGC,MAAM,CAAC,aAAa,CAAC;;IAGrCG,OAAO,CAACC,GAAG,CAACN,WAAW,CAAC;IACxB,IAAI,CAACO,UAAU,GAAG,IAAIjB,SAAS,CAAC;MAC9B,MAAM,EAAE,IAAID,WAAW,CAACS,UAAU,EAAC,CAACP,UAAU,CAACiB,QAAQ,CAAC,CAAC;MACzD,UAAU,EAAE,IAAInB,WAAW,CAACU,QAAQ,EAAC,CAACR,UAAU,CAACiB,QAAQ,CAAC,CAAC;MAC3D,aAAa,EAAE,IAAInB,WAAW,CAACW,WAAW,EAAC,CAACT,UAAU,CAACiB,QAAQ,CAAC;MAChE;MACA;MACA;MACA;MACA;MACA;KACD,CAAC;;IACFH,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,UAAU,CAACE,KAAK,CAAC;EACpC;EAEAC,0BAA0BA,CAAA;IACxB,OAAQ,IAAI,CAACH,UAAU,CAACI,GAAG,CAAC,aAAa,CAAe,CAACC,QAAQ;EACnE;EAEAC,oBAAoBA,CAAA;IACjB,IAAI,CAACN,UAAU,CAACI,GAAG,CAAC,aAAa,CAAe,CAACG,IAAI,CAAC,IAAIzB,WAAW,CAAC;MACrE0B,IAAI,EAAC,IAAI;MACTC,MAAM,EAAC;KACR,CAAC,CAAC;EACL;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACvB,KAAK,CAACwB,MAAM,CAACC,SAAS,CAAEC,KAAY,IAAG;MAC1C,IAAI,CAAChB,QAAQ,GAAGgB,KAAK,CAAC,IAAI,CAAC;MAC3Bf,OAAO,CAACC,GAAG,CAACc,KAAK,CAAC;MAClB,IAAI,CAACxB,MAAM,GAAGwB,KAAK,CAAC,IAAI,CAAC,IAAIC,SAAS;MACtChB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,MAAM,CAAC;MACxB,IAAI,CAACC,QAAQ,EAAE;IACjB,CAAC,CAAC;EACJ;EAEAyB,QAAQA,CAAA;IACNjB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,UAAU,CAAC;EAC9B;CAGD;AA9DYf,mBAAmB,GAAA+B,UAAA,EAL/BnC,SAAS,CAAC;EACToC,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,C,EACWlC,mBAAmB,CA8D/B;SA9DYA,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}