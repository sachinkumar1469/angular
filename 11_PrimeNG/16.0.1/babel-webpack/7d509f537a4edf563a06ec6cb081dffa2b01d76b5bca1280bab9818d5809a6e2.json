{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass UnlessDirective {\n  set unless(condition) {\n    if (!condition) {\n      // Display the template if condition is false\n    }\n  }\n  // We need access to ng-template and place where we want to put content in DOM\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n}\nUnlessDirective.ɵfac = function UnlessDirective_Factory(t) {\n  return new (t || UnlessDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\nUnlessDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: UnlessDirective,\n  selectors: [[\"\", \"appUnless\", \"\"]],\n  inputs: {\n    unless: \"unless\"\n  }\n});\nexport { UnlessDirective };","map":{"version":3,"names":["UnlessDirective","unless","condition","constructor","templateRef","i0","ɵɵdirectiveInject","TemplateRef","selectors","inputs"],"sources":["C:\\Users\\Sachin\\WorkSpace\\Angular_Tutorial\\02_Course_Project\\src\\app\\customDirectives\\unless.directive.ts"],"sourcesContent":["import { Directive,Input,TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[appUnless]'\n})\nexport class UnlessDirective {\n\n  @Input() set unless(condition:boolean){\n    if(!condition){\n      // Display the template if condition is false\n    }\n  }\n\n  // We need access to ng-template and place where we want to put content in DOM\n  constructor(private templateRef:TemplateRef<any>,) { }\n\n}\n"],"mappings":";AAEA,MAGaA,eAAe;EAE1B,IAAaC,MAAMA,CAACC,SAAiB;IACnC,IAAG,CAACA,SAAS,EAAC;MACZ;IAAA;EAEJ;EAEA;EACAC,YAAoBC,WAA4B;IAA5B,KAAAA,WAAW,GAAXA,WAAW;EAAsB;;AAT1CJ,eAAe,C;mBAAfA,eAAe,EAAAK,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,WAAA;AAAA;AAAfP,eAAe,C;QAAfA,eAAe;EAAAQ,SAAA;EAAAC,MAAA;IAAAR,MAAA;EAAA;AAAA;SAAfD,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}