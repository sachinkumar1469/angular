{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Recipe } from '../recipe.model';\nlet RecipeEditComponent = class RecipeEditComponent {\n  constructor(route, recipeSrv) {\n    this.route = route;\n    this.recipeSrv = recipeSrv;\n    this.isEdit = false;\n  }\n  initForm() {\n    let recipeName = \"\";\n    let imageURL = \"\";\n    let description = \"\";\n    let ingredients = new FormArray([]);\n    if (this.isEdit) {\n      let recipe = this.recipeSrv.getRecipeById(this.recipeId);\n      recipeName = recipe['name'];\n      imageURL = recipe['imagePath'];\n      description = recipe['description'];\n      let recipeIngredients = recipe['ingredients'];\n      recipeIngredients.forEach(ing => {\n        ingredients.push(new FormGroup({\n          name: new FormControl(ing.name, [Validators.required]),\n          amount: new FormControl(ing.amount, [Validators.required])\n        }));\n      });\n    }\n    this.recipeForm = new FormGroup({\n      'name': new FormControl(recipeName, [Validators.required]),\n      'imageURL': new FormControl(imageURL, [Validators.required]),\n      'description': new FormControl(description, [Validators.required]),\n      'ingredients': ingredients\n    });\n  }\n  getIngredientsControlArray() {\n    return this.recipeForm.get('ingredients').controls;\n  }\n  addIngredientControl() {\n    this.recipeForm.get(\"ingredients\").push(new FormGroup({\n      name: new FormControl(\"\", [Validators.required]),\n      amount: new FormControl(\"\", [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\n    }));\n  }\n  ngOnInit() {\n    this.route.params.subscribe(param => {\n      this.recipeId = param['id'];\n      this.isEdit = param['id'] != undefined;\n      this.initForm();\n    });\n  }\n  onSubmit() {\n    // console.log(this.recipeForm);\n    let recipe = new Recipe();\n    let values = this.recipeForm.value;\n    recipe.name = values.name;\n    recipe.imagePath = values.imageURL;\n    recipe.description = values.description;\n    recipe.ingredients = values.ingredients;\n    if (this.isEdit) {\n      recipe.id = this.recipeId;\n      console.log(this.recipeId);\n      this.recipeSrv.updateRecipe(this.recipeId, recipe);\n    } else {\n      this.recipeSrv.addRecipe(recipe);\n    }\n    this.recipeForm.reset();\n  }\n};\nRecipeEditComponent = __decorate([Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css']\n})], RecipeEditComponent);\nexport { RecipeEditComponent };","map":{"version":3,"names":["Component","FormArray","FormControl","FormGroup","Validators","Recipe","RecipeEditComponent","constructor","route","recipeSrv","isEdit","initForm","recipeName","imageURL","description","ingredients","recipe","getRecipeById","recipeId","recipeIngredients","forEach","ing","push","name","required","amount","recipeForm","getIngredientsControlArray","get","controls","addIngredientControl","pattern","ngOnInit","params","subscribe","param","undefined","onSubmit","values","value","imagePath","id","console","log","updateRecipe","addRecipe","reset","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Sachin\\WorkSpace\\Angular_Tutorial\\06_Course_Project_Forms\\src\\app\\recipes\\recipe-edit\\recipe-edit.component.ts"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { RecipeService } from '../recipe.service';\nimport { Ingredient } from 'src/app/shared/ingredient.model';\nimport { Recipe } from '../recipe.model';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css']\n})\nexport class RecipeEditComponent implements OnInit{\n  constructor(private route:ActivatedRoute, private recipeSrv:RecipeService){};\n\n  recipeId!:number;\n  isEdit:boolean = false;\n\n  recipeForm!:FormGroup;\n\n  private initForm(){\n    let recipeName = \"\";\n    let imageURL = \"\";\n    let description = \"\";\n    let ingredients = new FormArray<FormGroup>([]);\n    if(this.isEdit){\n      let recipe = this.recipeSrv.getRecipeById(this.recipeId)\n      recipeName = recipe['name'];\n      imageURL = recipe['imagePath'];\n      description = recipe['description'];\n      let recipeIngredients:Ingredient[] = recipe['ingredients'];\n      recipeIngredients.forEach(ing=>{\n        ingredients.push(new FormGroup({\n          name:new FormControl(ing.name,[Validators.required]),\n          amount: new FormControl(ing.amount,[Validators.required])\n        }))\n      })\n    }\n\n    this.recipeForm = new FormGroup({\n      'name': new FormControl(recipeName,[Validators.required]),\n      'imageURL': new FormControl(imageURL,[Validators.required]),\n      'description': new FormControl(description,[Validators.required]),\n      'ingredients': ingredients\n    });\n  }\n\n  getIngredientsControlArray(){\n    return (this.recipeForm.get('ingredients') as FormArray).controls;\n  }\n\n  addIngredientControl(){\n    (this.recipeForm.get(\"ingredients\") as FormArray).push(new FormGroup({\n      name: new FormControl(\"\",[Validators.required]),\n      amount:new FormControl(\"\",[Validators.required,Validators.pattern(/^[1-9]+[0-9]*$/)])\n    }))\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((param:Params)=>{\n      this.recipeId = param['id'];\n      this.isEdit = param['id'] != undefined;\n      this.initForm();\n    })\n  }\n\n  onSubmit(){\n    // console.log(this.recipeForm);\n    let recipe = new Recipe();\n    let values = this.recipeForm.value;\n    recipe.name = values.name;\n    recipe.imagePath = values.imageURL;\n    recipe.description = values.description;\n    recipe.ingredients = values.ingredients;\n    if(this.isEdit){\n      recipe.id = this.recipeId;\n      console.log(this.recipeId);\n      this.recipeSrv.updateRecipe(this.recipeId,recipe);\n    } else {\n      this.recipeSrv.addRecipe(recipe);\n    }\n    this.recipeForm.reset();\n  }\n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}