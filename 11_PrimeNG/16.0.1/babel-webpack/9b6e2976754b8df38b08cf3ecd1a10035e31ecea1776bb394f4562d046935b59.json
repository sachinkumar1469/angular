{"ast":null,"code":"import { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction RecipeEditComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 16)(2, \"label\", 17);\n    i0.ɵɵtext(3, \"Ingredient Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 19)(6, \"label\", 20);\n    i0.ɵɵtext(7, \"Ingredient Amount\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 22);\n    i0.ɵɵelement(10, \"label\", 20);\n    i0.ɵɵelementStart(11, \"div\", 23)(12, \"button\", 24);\n    i0.ɵɵtext(13, \"X\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"for\", i_r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"id\", i_r2);\n  }\n}\nconst _c0 = function () {\n  return {\n    marginRight: \"0.5em\"\n  };\n};\nclass RecipeEditComponent {\n  constructor(route) {\n    this.route = route;\n    this.isEdit = true;\n    this.recipeForm = new FormGroup({\n      name: new FormControl(null, [Validators.required]),\n      imageURL: new FormControl(null, [Validators.required]),\n      description: new FormGroup(null, [Validators.required]),\n      ingredients: new FormArray([])\n    });\n  }\n  getIngredientsControlArray() {\n    return this.recipeForm.get('ingredients').controls;\n  }\n  addIngredientControl() {\n    this.recipeForm.get(\"ingredients\").push(new FormControl({\n      name: null,\n      amount: null\n    }));\n  }\n  ngOnInit() {\n    this.route.params.subscribe(param => {\n      this.recipeId = param['id'];\n      this.isEdit = param['id'] != undefined;\n    });\n  }\n}\nRecipeEditComponent.ɵfac = function RecipeEditComponent_Factory(t) {\n  return new (t || RecipeEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\nRecipeEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RecipeEditComponent,\n  selectors: [[\"app-recipe-edit\"]],\n  decls: 41,\n  vars: 5,\n  consts: [[1, \"row\"], [1, \"col-xs-12\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"imageURL\"], [\"type\", \"text\", \"formControlName\", \"imageURL\", \"id\", \"imageURL\", 1, \"form-control\"], [\"src\", \"\", \"alt\", \"\", 1, \"img-responsive\"], [\"for\", \"description\"], [\"type\", \"text\", \"formControlName\", \"description\", \"id\", \"description\", 1, \"form-control\"], [1, \"btn\", \"btn-default\"], [\"form\", \"\", 1, \"row\"], [\"class\", \"form-group\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-success\", 3, \"ngStyle\"], [1, \"btn\", \"btn-danger\"], [1, \"col-xs-6\"], [3, \"for\"], [\"type\", \"text\", 1, \"form-control\", 3, \"id\"], [1, \"col-xs-4\"], [\"for\", \"\"], [\"type\", \"number\", \"name\", \"\", \"id\", \"\", 1, \"form-control\"], [1, \"col-xs-2\"], [1, \"\"], [1, \"btn\", \"btn-danger\", \"align-self-center\"]],\n  template: function RecipeEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2)(3, \"div\", 0)(4, \"div\", 1)(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \" Recipe Name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"div\", 0)(10, \"div\", 1)(11, \"div\", 3)(12, \"label\", 6);\n      i0.ɵɵtext(13, \" Image URL \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 7);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"div\", 0)(16, \"div\", 1);\n      i0.ɵɵelement(17, \"img\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 0)(19, \"div\", 1)(20, \"div\", 3)(21, \"label\", 9);\n      i0.ɵɵtext(22, \" Description \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"textarea\", 10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(24, \"div\", 0)(25, \"div\", 1)(26, \"div\", 0)(27, \"div\", 1)(28, \"button\", 11);\n      i0.ɵɵtext(29, \"Add Ingredient\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"br\")(31, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"div\", 12);\n      i0.ɵɵtemplate(33, RecipeEditComponent_div_33_Template, 14, 2, \"div\", 13);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(34, \"br\");\n      i0.ɵɵelementStart(35, \"div\", 0)(36, \"div\", 1)(37, \"button\", 14);\n      i0.ɵɵtext(38);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"button\", 15);\n      i0.ɵɵtext(40, \"Delete\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.recipeForm);\n      i0.ɵɵadvance(31);\n      i0.ɵɵproperty(\"ngForOf\", ctx.getIngredientsControlArray());\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction0(4, _c0));\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.isEdit ? \"Update\" : \"Save\");\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgStyle, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { RecipeEditComponent };","map":{"version":3,"names":["FormArray","FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵpropertyInterpolate","i_r2","RecipeEditComponent","constructor","route","isEdit","recipeForm","name","required","imageURL","description","ingredients","getIngredientsControlArray","get","controls","addIngredientControl","push","amount","ngOnInit","params","subscribe","param","recipeId","undefined","ɵɵdirectiveInject","i1","ActivatedRoute","selectors","decls","vars","consts","template","RecipeEditComponent_Template","rf","ctx","ɵɵtemplate","RecipeEditComponent_div_33_Template","ɵɵproperty","ɵɵpureFunction0","_c0","ɵɵtextInterpolate"],"sources":["C:\\Users\\Sachin\\WorkSpace\\Angular_Tutorial\\06_Course_Project_Forms\\src\\app\\recipes\\recipe-edit\\recipe-edit.component.ts","C:\\Users\\Sachin\\WorkSpace\\Angular_Tutorial\\06_Course_Project_Forms\\src\\app\\recipes\\recipe-edit\\recipe-edit.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Params } from '@angular/router';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css']\n})\nexport class RecipeEditComponent implements OnInit{\n  constructor(private route:ActivatedRoute){};\n\n  recipeId!:number;\n  isEdit:boolean = true;\n\n  recipeForm:FormGroup = new FormGroup({\n    name: new FormControl(null,[Validators.required]),\n    imageURL: new FormControl(null,[Validators.required]),\n    description: new FormGroup(null,[Validators.required]),\n    ingredients: new FormArray([])\n  })\n\n  getIngredientsControlArray(){\n    return (this.recipeForm.get('ingredients') as FormArray).controls;\n  }\n\n  addIngredientControl(){\n    (this.recipeForm.get(\"ingredients\") as FormArray).push(new FormControl({\n      name:null,\n      amount:null\n    }))\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((param:Params)=>{\n      this.recipeId = param['id'];\n      this.isEdit = param['id'] != undefined;\n    })\n  }\n\n\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <form [formGroup]=\"recipeForm\">\n\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"form-group\">\n            <label for=\"name\"> Recipe Name </label>\n            <input type=\"text\" id=\"name\" formControlName=\"name\" class=\"form-control\">\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"form-group\">\n            <label for=\"imageURL\"> Image URL </label>\n            <input type=\"text\" formControlName=\"imageURL\" id=\"imageURL\" class=\"form-control\">\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <img src=\"\" alt=\"\" class=\"img-responsive\">\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"form-group\">\n            <label for=\"description\"> Description </label>\n            <textarea type=\"text\" formControlName=\"description\" id=\"description\" class=\"form-control\"></textarea>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"row\">\n            <div class=\"col-xs-12\">\n              <button class=\"btn btn-default\">Add Ingredient</button>\n              <br><br>\n            </div>\n          </div>\n          <div class=\"row\" form>\n            <div class=\"form-group\" *ngFor=\"let ingredient of getIngredientsControlArray(); let i=index\">\n              <div class=\"col-xs-6\">\n                <label for={{i}}>Ingredient Name</label>\n                <input type=\"text\" id={{i}} class=\"form-control\">\n              </div>\n              <div class=\"col-xs-4\">\n                <label for=\"\">Ingredient Amount</label>\n                <input type=\"number\" name=\"\" id=\"\" class=\"form-control\">\n              </div>\n              <div class=\"col-xs-2 \">\n                <label for=\"\"></label>\n                <div class=\"\">\n                  <button class=\"btn btn-danger align-self-center\">X</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <br>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <button class=\"btn btn-success\" [ngStyle]=\"{marginRight:'0.5em'}\">{{isEdit ? 'Update' : 'Save'}}</button>\n          <button class=\"btn btn-danger\">Delete</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}