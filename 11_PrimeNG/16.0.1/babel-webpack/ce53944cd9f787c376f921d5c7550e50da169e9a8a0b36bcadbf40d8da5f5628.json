{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth-guard.service\";\nimport * as i2 from \"@angular/router\";\nclass AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(next, state) {\n    if (this.authService.isAuthenticated()) {\n      return true;\n    } else {\n      return this.router.createUrlTree(['/login']);\n    }\n    // return this.authService.isAuthenticated();\n  }\n\n  canActivateChild(childRoute, state) {\n    return true;\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthGuardService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthGuard };","map":{"version":3,"names":["AuthGuard","constructor","authService","router","canActivate","next","state","isAuthenticated","createUrlTree","canActivateChild","childRoute","i0","ɵɵinject","i1","AuthGuardService","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Sachin\\WorkSpace\\Angular_Tutorial\\03_Routing_In_Angular\\src\\app\\auth-guard.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivateChild } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthGuardService } from './auth-guard.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, CanActivateChild {\n  constructor(private authService: AuthGuardService, private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.authService.isAuthenticated()) {\n      return true;\n    } else {\n      return this.router.createUrlTree(['/login']);\n    }\n    // return this.authService.isAuthenticated();\n  }\n\n  canActivateChild(\n    childRoute: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n    return true;\n  }\n}\n"],"mappings":";;;AAKA,MAGaA,SAAS;EACpBC,YAAoBC,WAA6B,EAAUC,MAAc;IAArD,KAAAD,WAAW,GAAXA,WAAW;IAA4B,KAAAC,MAAM,GAANA,MAAM;EAAW;EAE5EC,WAAWA,CACTC,IAA4B,EAC5BC,KAA0B;IAE1B,IAAI,IAAI,CAACJ,WAAW,CAACK,eAAe,EAAE,EAAE;MACtC,OAAO,IAAI;KACZ,MAAM;MACL,OAAO,IAAI,CAACJ,MAAM,CAACK,aAAa,CAAC,CAAC,QAAQ,CAAC,CAAC;;IAE9C;EACF;;EAEAC,gBAAgBA,CACdC,UAAkC,EAClCJ,KAA0B;IAC1B,OAAO,IAAI;EACb;;AAnBWN,SAAS,C;mBAATA,SAAS,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,gBAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAAThB,SAAS,C;SAATA,SAAS;EAAAiB,OAAA,EAATjB,SAAS,CAAAkB,IAAA;EAAAC,UAAA,EAFR;AAAM;SAEPnB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}