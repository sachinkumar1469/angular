{"ast":null,"code":"import { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = function () {\n  return {\n    marginRight: \"0.5em\"\n  };\n};\nclass RecipeEditComponent {\n  constructor(route) {\n    this.route = route;\n    this.isEdit = true;\n    this.recipeForm = new FormGroup({\n      name: new FormControl(null, [Validators.required]),\n      imageURL: new FormControl(null, [Validators.required]),\n      description: new FormGroup(null, [Validators.required]),\n      ingredients: new FormArray([])\n    });\n  }\n  getIngredientsControlArray() {\n    return this.recipeForm.get('ingredients').controls;\n  }\n  addIngredientControl() {\n    this.recipeForm.get(\"ingredients\").push(new FormControl({\n      name: null,\n      amount: null\n    }));\n  }\n  ngOnInit() {\n    this.route.params.subscribe(param => {\n      this.recipeId = param['id'];\n      this.isEdit = param['id'] != undefined;\n    });\n  }\n  onSubmit() {\n    console.log(this.recipeForm);\n  }\n}\nRecipeEditComponent.ɵfac = function RecipeEditComponent_Factory(t) {\n  return new (t || RecipeEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\nRecipeEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RecipeEditComponent,\n  selectors: [[\"app-recipe-edit\"]],\n  decls: 40,\n  vars: 4,\n  consts: [[1, \"row\"], [1, \"col-xs-12\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"imageURL\"], [\"type\", \"text\", \"formControlName\", \"imageURL\", \"id\", \"imageURL\", 1, \"form-control\"], [\"src\", \"\", \"alt\", \"\", 1, \"img-responsive\"], [\"for\", \"description\"], [\"type\", \"text\", \"formControlName\", \"description\", \"id\", \"description\", 1, \"form-control\"], [1, \"btn\", \"btn-default\", 3, \"click\"], [\"formArrayName\", \"ingredients\", 1, \"row\"], [1, \"btn\", \"btn-success\", 3, \"ngStyle\", \"click\"], [1, \"btn\", \"btn-danger\"]],\n  template: function RecipeEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2)(3, \"div\", 0)(4, \"div\", 1)(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \" Recipe Name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"div\", 0)(10, \"div\", 1)(11, \"div\", 3)(12, \"label\", 6);\n      i0.ɵɵtext(13, \" Image URL \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 7);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"div\", 0)(16, \"div\", 1);\n      i0.ɵɵelement(17, \"img\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 0)(19, \"div\", 1)(20, \"div\", 3)(21, \"label\", 9);\n      i0.ɵɵtext(22, \" Description \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"textarea\", 10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(24, \"div\", 0)(25, \"div\", 1)(26, \"div\", 0)(27, \"div\", 1)(28, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function RecipeEditComponent_Template_button_click_28_listener() {\n        return ctx.addIngredientControl();\n      });\n      i0.ɵɵtext(29, \"Add Ingredient\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"br\")(31, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(32, \"div\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(33, \"br\");\n      i0.ɵɵelementStart(34, \"div\", 0)(35, \"div\", 1)(36, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function RecipeEditComponent_Template_button_click_36_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(37);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"button\", 14);\n      i0.ɵɵtext(39, \"Delete\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.recipeForm);\n      i0.ɵɵadvance(34);\n      i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction0(3, _c0));\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.isEdit ? \"Update\" : \"Save\");\n    }\n  },\n  dependencies: [i2.NgStyle, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i3.FormArrayName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { RecipeEditComponent };","map":{"version":3,"names":["FormArray","FormControl","FormGroup","Validators","RecipeEditComponent","constructor","route","isEdit","recipeForm","name","required","imageURL","description","ingredients","getIngredientsControlArray","get","controls","addIngredientControl","push","amount","ngOnInit","params","subscribe","param","recipeId","undefined","onSubmit","console","log","i0","ɵɵdirectiveInject","i1","ActivatedRoute","selectors","decls","vars","consts","template","RecipeEditComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","RecipeEditComponent_Template_button_click_28_listener","RecipeEditComponent_Template_button_click_36_listener","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0","ɵɵtextInterpolate"],"sources":["C:\\Users\\Sachin\\WorkSpace\\Angular_Tutorial\\06_Course_Project_Forms\\src\\app\\recipes\\recipe-edit\\recipe-edit.component.ts","C:\\Users\\Sachin\\WorkSpace\\Angular_Tutorial\\06_Course_Project_Forms\\src\\app\\recipes\\recipe-edit\\recipe-edit.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Params } from '@angular/router';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css']\n})\nexport class RecipeEditComponent implements OnInit{\n  constructor(private route:ActivatedRoute){};\n\n  recipeId!:number;\n  isEdit:boolean = true;\n\n  recipeForm:FormGroup = new FormGroup({\n    name: new FormControl(null,[Validators.required]),\n    imageURL: new FormControl(null,[Validators.required]),\n    description: new FormGroup(null,[Validators.required]),\n    ingredients: new FormArray([])\n  })\n\n  getIngredientsControlArray(){\n    return (this.recipeForm.get('ingredients') as FormArray).controls;\n  }\n\n  addIngredientControl(){\n    (this.recipeForm.get(\"ingredients\") as FormArray).push(new FormControl({\n      name:null,\n      amount:null\n    }))\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((param:Params)=>{\n      this.recipeId = param['id'];\n      this.isEdit = param['id'] != undefined;\n    })\n  }\n\n  onSubmit(){\n    console.log(this.recipeForm)\n  }\n\n\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <form [formGroup]=\"recipeForm\">\n\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"form-group\">\n            <label for=\"name\"> Recipe Name </label>\n            <input type=\"text\" id=\"name\" formControlName=\"name\" class=\"form-control\">\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"form-group\">\n            <label for=\"imageURL\"> Image URL </label>\n            <input type=\"text\" formControlName=\"imageURL\" id=\"imageURL\" class=\"form-control\">\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <img src=\"\" alt=\"\" class=\"img-responsive\">\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"form-group\">\n            <label for=\"description\"> Description </label>\n            <textarea type=\"text\" formControlName=\"description\" id=\"description\" class=\"form-control\"></textarea>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"row\">\n            <div class=\"col-xs-12\">\n              <button class=\"btn btn-default\" (click)=\"addIngredientControl()\">Add Ingredient</button>\n              <br><br>\n            </div>\n          </div>\n          <div class=\"row\" formArrayName=\"ingredients\">\n            <!-- <div class=\"form-group\" *ngFor=\"let ingredient of getIngredientsControlArray(); let i=index\">\n              <div class=\"col-xs-6\">\n                <label for={{i}}>Ingredient Name</label>\n                <input type=\"text\" id={{i}} class=\"form-control\">\n              </div>\n              <div class=\"col-xs-4\">\n                <label for=\"\">Ingredient Amount</label>\n                <input type=\"number\" name=\"\" id=\"\" class=\"form-control\">\n              </div>\n              <div class=\"col-xs-2 \">\n                <label for=\"\"></label>\n                <div class=\"\">\n                  <button class=\"btn btn-danger align-self-center\">X</button>\n                </div>\n              </div>\n            </div> -->\n          </div>\n        </div>\n      </div>\n      <br>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <button class=\"btn btn-success\" (click)=\"onSubmit()\" [ngStyle]=\"{marginRight:'0.5em'}\">{{isEdit ? 'Update' : 'Save'}}</button>\n          <button class=\"btn btn-danger\">Delete</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}