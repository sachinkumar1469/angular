{"ast":null,"code":"import { Subject, tap } from \"rxjs\";\nimport { User } from \"./user.model\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AuthService {\n  constructor(http) {\n    this.http = http;\n    this.user = new Subject();\n  }\n  signUp(user) {\n    return this.http.post(\"http://localhost:8000/signup\", user).pipe(tap(resData => {\n      if (!resData.token) {\n        this.user.next(null);\n        return;\n      }\n      const userObj = new User(resData.user.email, resData.user._id, resData.token);\n      this.user.next(userObj);\n    }));\n  }\n  signin(user) {\n    return this.http.post(\"http://localhost:8000/signin\", user).pipe(tap(resData => {\n      if (!resData.token) {\n        this.user.next(null);\n        return;\n      }\n      const userObj = new User(resData.user.email, resData.user._id, resData.token);\n      this.user.next(userObj);\n    }));\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: \"root\"\n});\nexport { AuthService };","map":{"version":3,"names":["Subject","tap","User","AuthService","constructor","http","user","signUp","post","pipe","resData","token","next","userObj","email","_id","signin","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Sachin\\WorkSpace\\Angular_Tutorial\\10_Authentication\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Subject, tap } from \"rxjs\";\r\nimport { User } from \"./user.model\";\r\n\r\n@Injectable({\r\n  providedIn:\"root\"\r\n})\r\nexport class AuthService{\r\n  constructor(private http:HttpClient){}\r\n\r\n  user = new Subject<User|null>();\r\n\r\n  signUp(user:{email:string,password:string}){\r\n    return this.http.post(\"http://localhost:8000/signup\",user).pipe(tap((resData:any)=>{\r\n      if(!resData.token){\r\n        this.user.next(null);\r\n        return;\r\n      }\r\n      const userObj = new User(resData.user.email,resData.user._id,resData.token);\r\n      this.user.next(userObj);\r\n    }));\r\n  }\r\n  signin(user:{email:string,password:string}){\r\n    return this.http.post(\"http://localhost:8000/signin\",user).pipe(tap((resData:any)=>{\r\n      if(!resData.token){\r\n        this.user.next(null);\r\n        return;\r\n      }\r\n      const userObj = new User(resData.user.email,resData.user._id,resData.token);\r\n      this.user.next(userObj);\r\n    }));\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,OAAO,EAAEC,GAAG,QAAQ,MAAM;AACnC,SAASC,IAAI,QAAQ,cAAc;;;AAEnC,MAGaC,WAAW;EACtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,IAAI,GAAG,IAAIN,OAAO,EAAa;EAFM;EAIrCO,MAAMA,CAACD,IAAmC;IACxC,OAAO,IAAI,CAACD,IAAI,CAACG,IAAI,CAAC,8BAA8B,EAACF,IAAI,CAAC,CAACG,IAAI,CAACR,GAAG,CAAES,OAAW,IAAG;MACjF,IAAG,CAACA,OAAO,CAACC,KAAK,EAAC;QAChB,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAI,CAAC;QACpB;;MAEF,MAAMC,OAAO,GAAG,IAAIX,IAAI,CAACQ,OAAO,CAACJ,IAAI,CAACQ,KAAK,EAACJ,OAAO,CAACJ,IAAI,CAACS,GAAG,EAACL,OAAO,CAACC,KAAK,CAAC;MAC3E,IAAI,CAACL,IAAI,CAACM,IAAI,CAACC,OAAO,CAAC;IACzB,CAAC,CAAC,CAAC;EACL;EACAG,MAAMA,CAACV,IAAmC;IACxC,OAAO,IAAI,CAACD,IAAI,CAACG,IAAI,CAAC,8BAA8B,EAACF,IAAI,CAAC,CAACG,IAAI,CAACR,GAAG,CAAES,OAAW,IAAG;MACjF,IAAG,CAACA,OAAO,CAACC,KAAK,EAAC;QAChB,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAI,CAAC;QACpB;;MAEF,MAAMC,OAAO,GAAG,IAAIX,IAAI,CAACQ,OAAO,CAACJ,IAAI,CAACQ,KAAK,EAACJ,OAAO,CAACJ,IAAI,CAACS,GAAG,EAACL,OAAO,CAACC,KAAK,CAAC;MAC3E,IAAI,CAACL,IAAI,CAACM,IAAI,CAACC,OAAO,CAAC;IACzB,CAAC,CAAC,CAAC;EACL;;AAxBWV,WAAW,C;mBAAXA,WAAW,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXjB,WAAW,C;SAAXA,WAAW;EAAAkB,OAAA,EAAXlB,WAAW,CAAAmB,IAAA;EAAAC,UAAA,EAFX;AAAM;SAENpB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}