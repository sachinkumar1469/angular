{"ast":null,"code":"import { BehaviorSubject, tap } from \"rxjs\";\nimport { User } from \"./user.model\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nclass AuthService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    // We can subscribe to behaviour subject even after it emitted the value.\n    // When we access it gives the previous value\n    this.user = new BehaviorSubject(null);\n  }\n  // token = new BehaviorSubject<string|null>(null);\n  signUp(user) {\n    return this.http.post(\"http://localhost:8000/signup\", user).pipe(tap(resData => {\n      if (!resData.token) {\n        this.user.next(null);\n        return;\n      }\n      const userObj = new User(resData.user.email, resData.user._id, resData.token);\n      this.user.next(userObj);\n      localStorage.setItem(\"user\", JSON.stringify(userObj));\n    }));\n  }\n  signin(user) {\n    return this.http.post(\"http://localhost:8000/signin\", user).pipe(tap(resData => {\n      if (!resData.token) {\n        this.user.next(null);\n        return;\n      }\n      const userObj = new User(resData.user.email, resData.user._id, resData.token);\n      this.user.next(userObj);\n      localStorage.setItem(\"user\", JSON.stringify(userObj));\n    }));\n  }\n  onLogout() {\n    this.user.next(null);\n    this.router.navigate([\"/auth\"]);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: \"root\"\n});\nexport { AuthService };","map":{"version":3,"names":["BehaviorSubject","tap","User","AuthService","constructor","http","router","user","signUp","post","pipe","resData","token","next","userObj","email","_id","localStorage","setItem","JSON","stringify","signin","onLogout","navigate","i0","ɵɵinject","i1","HttpClient","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Sachin\\WorkSpace\\Angular_Tutorial\\10_Authentication\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject, Subject, tap } from \"rxjs\";\r\nimport { User } from \"./user.model\";\r\nimport { Route, Router } from \"@angular/router\";\r\n\r\n@Injectable({\r\n  providedIn:\"root\"\r\n})\r\nexport class AuthService{\r\n\r\n  constructor(private http:HttpClient,private router:Router){}\r\n\r\n  // We can subscribe to behaviour subject even after it emitted the value.\r\n  // When we access it gives the previous value\r\n  user = new BehaviorSubject<User|null>(null);\r\n  // token = new BehaviorSubject<string|null>(null);\r\n\r\n  signUp(user:{email:string,password:string}){\r\n    return this.http.post(\"http://localhost:8000/signup\",user).pipe(tap((resData:any)=>{\r\n      if(!resData.token){\r\n        this.user.next(null);\r\n        return;\r\n      }\r\n      const userObj = new User(resData.user.email,resData.user._id,resData.token);\r\n      this.user.next(userObj);\r\n      localStorage.setItem(\"user\",JSON.stringify(userObj));\r\n    }));\r\n  }\r\n  signin(user:{email:string,password:string}){\r\n    return this.http.post(\"http://localhost:8000/signin\",user).pipe(tap((resData:any)=>{\r\n      if(!resData.token){\r\n        this.user.next(null);\r\n        return;\r\n      }\r\n      const userObj = new User(resData.user.email,resData.user._id,resData.token);\r\n      this.user.next(userObj);\r\n      localStorage.setItem(\"user\",JSON.stringify(userObj));\r\n    }));\r\n  }\r\n  onLogout(){\r\n    this.user.next(null);\r\n    this.router.navigate([\"/auth\"])\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,eAAe,EAAWC,GAAG,QAAQ,MAAM;AACpD,SAASC,IAAI,QAAQ,cAAc;;;;AAGnC,MAGaC,WAAW;EAEtBC,YAAoBC,IAAe,EAASC,MAAa;IAArC,KAAAD,IAAI,GAAJA,IAAI;IAAoB,KAAAC,MAAM,GAANA,MAAM;IAElD;IACA;IACA,KAAAC,IAAI,GAAG,IAAIP,eAAe,CAAY,IAAI,CAAC;EAJgB;EAK3D;EAEAQ,MAAMA,CAACD,IAAmC;IACxC,OAAO,IAAI,CAACF,IAAI,CAACI,IAAI,CAAC,8BAA8B,EAACF,IAAI,CAAC,CAACG,IAAI,CAACT,GAAG,CAAEU,OAAW,IAAG;MACjF,IAAG,CAACA,OAAO,CAACC,KAAK,EAAC;QAChB,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAI,CAAC;QACpB;;MAEF,MAAMC,OAAO,GAAG,IAAIZ,IAAI,CAACS,OAAO,CAACJ,IAAI,CAACQ,KAAK,EAACJ,OAAO,CAACJ,IAAI,CAACS,GAAG,EAACL,OAAO,CAACC,KAAK,CAAC;MAC3E,IAAI,CAACL,IAAI,CAACM,IAAI,CAACC,OAAO,CAAC;MACvBG,YAAY,CAACC,OAAO,CAAC,MAAM,EAACC,IAAI,CAACC,SAAS,CAACN,OAAO,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;EACL;EACAO,MAAMA,CAACd,IAAmC;IACxC,OAAO,IAAI,CAACF,IAAI,CAACI,IAAI,CAAC,8BAA8B,EAACF,IAAI,CAAC,CAACG,IAAI,CAACT,GAAG,CAAEU,OAAW,IAAG;MACjF,IAAG,CAACA,OAAO,CAACC,KAAK,EAAC;QAChB,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAI,CAAC;QACpB;;MAEF,MAAMC,OAAO,GAAG,IAAIZ,IAAI,CAACS,OAAO,CAACJ,IAAI,CAACQ,KAAK,EAACJ,OAAO,CAACJ,IAAI,CAACS,GAAG,EAACL,OAAO,CAACC,KAAK,CAAC;MAC3E,IAAI,CAACL,IAAI,CAACM,IAAI,CAACC,OAAO,CAAC;MACvBG,YAAY,CAACC,OAAO,CAAC,MAAM,EAACC,IAAI,CAACC,SAAS,CAACN,OAAO,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;EACL;EACAQ,QAAQA,CAAA;IACN,IAAI,CAACf,IAAI,CAACM,IAAI,CAAC,IAAI,CAAC;IACpB,IAAI,CAACP,MAAM,CAACiB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACjC;;AAlCWpB,WAAW,C;mBAAXA,WAAW,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAAX1B,WAAW,C;SAAXA,WAAW;EAAA2B,OAAA,EAAX3B,WAAW,CAAA4B,IAAA;EAAAC,UAAA,EAFX;AAAM;SAEN7B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}