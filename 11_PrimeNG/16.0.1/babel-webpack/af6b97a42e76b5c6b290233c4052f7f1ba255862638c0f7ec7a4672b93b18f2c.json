{"ast":null,"code":"import { Recipe } from \"./recipe.model\";\nimport { Ingredient } from \"../shared/ingredient.model\";\nimport { Subject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shopping-lists/shopping.service\";\nclass RecipeService {\n  constructor(shoppingSrv) {\n    this.shoppingSrv = shoppingSrv;\n    this.recipesListChanged = new Subject();\n    this.recipes = [new Recipe(0, \"Banana Shake\", \"Ragi Oats Cookies With Banana Milkshake Recipe Card\", \"https://www.sanjeevkapoor.com/UploadFiles/RecipeImages/Ragi-Oats-Cookies-With-Banana-Milkshake.JPG\", [new Ingredient(\"Banana\", 2), new Ingredient(\"Milk\", 500), new Ingredient(\"Vanilla Icecream\", 1)]), new Recipe(1, \"Pizza Rolls\", \"How to make Pizza Roll Ups - This snack resembles swiss roll but is savoury and quite wholesome\", \"https://www.sanjeevkapoor.com/UploadFiles/RecipeImages/Pizza-Roll-Ups.JPG\", [new Ingredient(\"afsdf\", 10), new Ingredient(\"Fresh yeast\", 4), new Ingredient(\"Sugar\", 10), new Ingredient('Refined flour', 3), new Ingredient(\"Mozzarella cheese\", 2)]), new Recipe(2, \"Recipe3\", \"lorem ipsum iuyt mnbhjk restgh reongt ljoiuen dreg\", \"https://img.freepik.com/free-photo/fresh-hamburger-with-salad-onion_144627-9522.jpg?size=626&ext=jpg&ga=GA1.2.98251874.1684238197&semt=sph\", [new Ingredient(\"cderfv\", 10), new Ingredient(\"yhnbgt\", 10), new Ingredient(\"ytyrt\", 10)])];\n    this.recipeSelectedEvent = new Subject();\n  }\n  getRecipes() {\n    return this.recipes.slice(0);\n  }\n  addIngredientsToShoppingList(ingredients) {\n    for (let ingredient of ingredients) {\n      this.shoppingSrv.addNewIngredient(ingredient);\n    }\n  }\n  getRecipeById(id) {\n    let indx = this.recipes.findIndex(r => r.id == id);\n    return this.recipes[indx];\n  }\n  addRecipe(recipe) {\n    recipe.id = this.recipes.length;\n    this.recipes.push(recipe);\n    this.recipesListChanged.next(this.recipes);\n  }\n  deleteRecipe(index) {\n    let ind = this.recipes.findIndex(r => r.id == index);\n    this.recipes.splice(ind, 1);\n    this.recipesListChanged.next(this.recipes);\n  }\n  updateRecipe(id, recipe) {\n    let indx = this.recipes.findIndex(r => r.id == id);\n    console.log('idx of update recipe is: ' + indx + \" Actual id is \", recipe.id);\n    this.recipes[indx] = recipe;\n    this.recipesListChanged.next(this.recipes);\n  }\n}\nRecipeService.ɵfac = function RecipeService_Factory(t) {\n  return new (t || RecipeService)(i0.ɵɵinject(i1.ShoppingService));\n};\nRecipeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RecipeService,\n  factory: RecipeService.ɵfac,\n  providedIn: 'root'\n});\nexport { RecipeService };","map":{"version":3,"names":["Recipe","Ingredient","Subject","RecipeService","constructor","shoppingSrv","recipesListChanged","recipes","recipeSelectedEvent","getRecipes","slice","addIngredientsToShoppingList","ingredients","ingredient","addNewIngredient","getRecipeById","id","indx","findIndex","r","addRecipe","recipe","length","push","next","deleteRecipe","index","ind","splice","updateRecipe","console","log","i0","ɵɵinject","i1","ShoppingService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Sachin\\WorkSpace\\Angular_Tutorial\\09_Course_Project_HTTP\\src\\app\\recipes\\recipe.service.ts"],"sourcesContent":["\r\nimport {Injectable,EventEmitter} from \"@angular/core\";\r\nimport { Recipe } from \"./recipe.model\";\r\nimport { Ingredient } from \"../shared/ingredient.model\";\r\nimport { ShoppingService } from \"../shopping-lists/shopping.service\";\r\nimport { Subject } from \"rxjs\"\r\n\r\n@Injectable({providedIn:'root'})\r\nexport class RecipeService{\r\n  constructor(private shoppingSrv:ShoppingService){}\r\n\r\n  recipesListChanged = new Subject<Recipe[]>();\r\n\r\n  private recipes:Recipe[] = [\r\n    new Recipe(0,\"Banana Shake\",\"Ragi Oats Cookies With Banana Milkshake Recipe Card\",\"https://www.sanjeevkapoor.com/UploadFiles/RecipeImages/Ragi-Oats-Cookies-With-Banana-Milkshake.JPG\",[new Ingredient(\"Banana\",2),new Ingredient(\"Milk\",500),new Ingredient(\"Vanilla Icecream\",1)])\r\n    ,new Recipe(1,\"Pizza Rolls\",\"How to make Pizza Roll Ups - This snack resembles swiss roll but is savoury and quite wholesome\",\"https://www.sanjeevkapoor.com/UploadFiles/RecipeImages/Pizza-Roll-Ups.JPG\",[new Ingredient(\"afsdf\",10),new Ingredient(\"Fresh yeast\",4),new Ingredient(\"Sugar\",10),new Ingredient('Refined flour',3),new Ingredient(\"Mozzarella cheese\",2)])\r\n    ,new Recipe(2,\"Recipe3\",\"lorem ipsum iuyt mnbhjk restgh reongt ljoiuen dreg\",\"https://img.freepik.com/free-photo/fresh-hamburger-with-salad-onion_144627-9522.jpg?size=626&ext=jpg&ga=GA1.2.98251874.1684238197&semt=sph\",[new Ingredient(\"cderfv\",10),new Ingredient(\"yhnbgt\",10),new Ingredient(\"ytyrt\",10)])\r\n  ];\r\n\r\n\r\n  public recipeSelectedEvent:Subject<Recipe> = new Subject<Recipe>();\r\n\r\n  public getRecipes(){\r\n    return this.recipes.slice(0);\r\n  }\r\n\r\n  addIngredientsToShoppingList(ingredients:Ingredient[]){\r\n    for(let ingredient of ingredients){\r\n      this.shoppingSrv.addNewIngredient(ingredient);\r\n    }\r\n  }\r\n\r\n  getRecipeById(id:number):Recipe{\r\n    let indx = this.recipes.findIndex(r=>r.id == id);\r\n    return this.recipes[indx];\r\n  }\r\n\r\n  addRecipe(recipe:Recipe){\r\n    recipe.id = this.recipes.length;\r\n    this.recipes.push(recipe);\r\n    this.recipesListChanged.next(this.recipes);\r\n  }\r\n\r\n  deleteRecipe(index:number){\r\n    let ind = this.recipes.findIndex(r=>r.id == index);\r\n    this.recipes.splice(ind,1);\r\n    this.recipesListChanged.next(this.recipes);\r\n  }\r\n\r\n  updateRecipe(id:number,recipe:Recipe){\r\n    let indx = this.recipes.findIndex(r=>r.id == id);\r\n    console.log('idx of update recipe is: '+indx+\" Actual id is \",recipe.id);\r\n    this.recipes[indx] = recipe;\r\n    this.recipesListChanged.next(this.recipes);\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}