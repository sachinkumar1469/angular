{"ast":null,"code":"import { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../recipe.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = function () {\n  return {\n    marginRight: \"0.5em\"\n  };\n};\nclass RecipeEditComponent {\n  constructor(route, recipeSrv) {\n    this.route = route;\n    this.recipeSrv = recipeSrv;\n    this.isEdit = false;\n  }\n  initForm() {\n    let recipeName = \"\";\n    let imageURL = \"\";\n    let description = \"\";\n    let ingredients = new FormArray([]);\n    if (this.isEdit) {\n      let recipe = this.recipeSrv.getRecipeById(this.recipeId);\n      recipeName = recipe['name'];\n      imageURL = recipe['imagePath'];\n      description = recipe['description'];\n      let recipeIngredients = recipe['ingredients'];\n      re;\n    }\n    console.log(description);\n    this.recipeForm = new FormGroup({\n      'name': new FormControl(recipeName, [Validators.required]),\n      'imageURL': new FormControl(imageURL, [Validators.required]),\n      'description': new FormControl(description, [Validators.required])\n      // 'ingredients': new FormArray(ingredients.map((ing)=>{\n      //   return new FormGroup({\n      //     name: new FormControl(ing.name),\n      //     amount: new FormControl(ing.amount)\n      //   })\n      // }))\n    });\n  }\n\n  getIngredientsControlArray() {\n    return this.recipeForm.get('ingredients').controls;\n  }\n  addIngredientControl() {\n    this.recipeForm.get(\"ingredients\").push(new FormControl({\n      name: null,\n      amount: null\n    }));\n  }\n  ngOnInit() {\n    this.route.params.subscribe(param => {\n      this.recipeId = param['id'];\n      this.isEdit = param['id'] != undefined;\n      this.initForm();\n    });\n  }\n  onSubmit() {\n    console.log(this.recipeForm);\n  }\n}\nRecipeEditComponent.ɵfac = function RecipeEditComponent_Factory(t) {\n  return new (t || RecipeEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.RecipeService));\n};\nRecipeEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RecipeEditComponent,\n  selectors: [[\"app-recipe-edit\"]],\n  decls: 31,\n  vars: 4,\n  consts: [[1, \"row\"], [1, \"col-xs-12\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"imageURL\"], [\"type\", \"text\", \"formControlName\", \"imageURL\", \"id\", \"imageURL\", 1, \"form-control\"], [\"src\", \"\", \"alt\", \"\", 1, \"img-responsive\"], [\"for\", \"description\"], [\"type\", \"text\", \"formControlName\", \"description\", \"id\", \"description\", 1, \"form-control\"], [1, \"btn\", \"btn-success\", 3, \"ngStyle\"], [1, \"btn\", \"btn-danger\"]],\n  template: function RecipeEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function RecipeEditComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1)(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \" Recipe Name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"div\", 0)(10, \"div\", 1)(11, \"div\", 3)(12, \"label\", 6);\n      i0.ɵɵtext(13, \" Image URL \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 7);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"div\", 0)(16, \"div\", 1);\n      i0.ɵɵelement(17, \"img\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 0)(19, \"div\", 1)(20, \"div\", 3)(21, \"label\", 9);\n      i0.ɵɵtext(22, \" Description \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"textarea\", 10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(24, \"br\");\n      i0.ɵɵelementStart(25, \"div\", 0)(26, \"div\", 1)(27, \"button\", 11);\n      i0.ɵɵtext(28);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"button\", 12);\n      i0.ɵɵtext(30, \"Delete\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.recipeForm);\n      i0.ɵɵadvance(25);\n      i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction0(3, _c0));\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.isEdit ? \"Update\" : \"Save\");\n    }\n  },\n  dependencies: [i3.NgStyle, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { RecipeEditComponent };","map":{"version":3,"names":["FormArray","FormControl","FormGroup","Validators","RecipeEditComponent","constructor","route","recipeSrv","isEdit","initForm","recipeName","imageURL","description","ingredients","recipe","getRecipeById","recipeId","recipeIngredients","re","console","log","recipeForm","required","getIngredientsControlArray","get","controls","addIngredientControl","push","name","amount","ngOnInit","params","subscribe","param","undefined","onSubmit","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","RecipeService","selectors","decls","vars","consts","template","RecipeEditComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","RecipeEditComponent_Template_form_ngSubmit_2_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0","ɵɵtextInterpolate"],"sources":["C:\\Users\\Sachin\\WorkSpace\\Angular_Tutorial\\06_Course_Project_Forms\\src\\app\\recipes\\recipe-edit\\recipe-edit.component.ts","C:\\Users\\Sachin\\WorkSpace\\Angular_Tutorial\\06_Course_Project_Forms\\src\\app\\recipes\\recipe-edit\\recipe-edit.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { RecipeService } from '../recipe.service';\nimport { Ingredient } from 'src/app/shared/ingredient.model';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css']\n})\nexport class RecipeEditComponent implements OnInit{\n  constructor(private route:ActivatedRoute, private recipeSrv:RecipeService){};\n\n  recipeId!:number;\n  isEdit:boolean = false;\n\n  recipeForm!:FormGroup;\n\n  private initForm(){\n    let recipeName = \"\";\n    let imageURL = \"\";\n    let description = \"\";\n    let ingredients = new FormArray([]);\n    if(this.isEdit){\n      let recipe = this.recipeSrv.getRecipeById(this.recipeId)\n      recipeName = recipe['name'];\n      imageURL = recipe['imagePath'];\n      description = recipe['description'];\n      let recipeIngredients:Ingredient[] = recipe['ingredients'];\n      re\n    }\n    console.log(description);\n    this.recipeForm = new FormGroup({\n      'name': new FormControl(recipeName,[Validators.required]),\n      'imageURL': new FormControl(imageURL,[Validators.required]),\n      'description': new FormControl(description,[Validators.required]),\n      // 'ingredients': new FormArray(ingredients.map((ing)=>{\n      //   return new FormGroup({\n      //     name: new FormControl(ing.name),\n      //     amount: new FormControl(ing.amount)\n      //   })\n      // }))\n    });\n  }\n\n  getIngredientsControlArray(){\n    return (this.recipeForm.get('ingredients') as FormArray).controls;\n  }\n\n  addIngredientControl(){\n    (this.recipeForm.get(\"ingredients\") as FormArray).push(new FormControl({\n      name:null,\n      amount:null\n    }))\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((param:Params)=>{\n      this.recipeId = param['id'];\n      this.isEdit = param['id'] != undefined;\n      this.initForm();\n    })\n  }\n\n  onSubmit(){\n    console.log(this.recipeForm);\n  }\n\n\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <form [formGroup]=\"recipeForm\" (ngSubmit)=\"onSubmit()\">\n\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"form-group\">\n            <label for=\"name\"> Recipe Name </label>\n            <input type=\"text\" id=\"name\" formControlName=\"name\" class=\"form-control\">\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"form-group\">\n            <label for=\"imageURL\"> Image URL </label>\n            <input type=\"text\" formControlName=\"imageURL\" id=\"imageURL\" class=\"form-control\">\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <img src=\"\" alt=\"\" class=\"img-responsive\">\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"form-group\">\n            <label for=\"description\"> Description </label>\n            <textarea type=\"text\" formControlName=\"description\" id=\"description\" class=\"form-control\"></textarea>\n          </div>\n        </div>\n      </div>\n      <!-- <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"row\">\n            <div class=\"col-xs-12\">\n              <button class=\"btn btn-default\" (click)=\"addIngredientControl()\">Add Ingredient</button>\n              <br><br>\n            </div>\n          </div>\n          <div class=\"row\" formArrayName=\"ingredients\">\n            <div class=\"form-group\" *ngFor=\"let ingredient of getIngredientsControlArray(); let i=index\">\n              <div class=\"col-xs-6\">\n                <label for={{i}}>Ingredient Name</label>\n                <input type=\"text\" id={{i}} class=\"form-control\">\n              </div>\n              <div class=\"col-xs-4\">\n                <label for=\"\">Ingredient Amount</label>\n                <input type=\"number\" name=\"\" id=\"\" class=\"form-control\">\n              </div>\n              <div class=\"col-xs-2 \">\n                <label for=\"\"></label>\n                <div class=\"\">\n                  <button class=\"btn btn-danger align-self-center\">X</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div> -->\n      <br>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <button class=\"btn btn-success\" [ngStyle]=\"{marginRight:'0.5em'}\">{{isEdit ? 'Update' : 'Save'}}</button>\n          <button class=\"btn btn-danger\">Delete</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}